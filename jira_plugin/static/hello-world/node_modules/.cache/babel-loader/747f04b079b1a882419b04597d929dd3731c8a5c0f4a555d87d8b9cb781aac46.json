{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"G:/Personal_projects/ai_jira_assistant/jira_plugin/static/hello-world/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _objectSpread = require(\"G:/Personal_projects/ai_jira_assistant/jira_plugin/static/hello-world/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _regeneratorRuntime = require(\"G:/Personal_projects/ai_jira_assistant/jira_plugin/static/hello-world/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"G:/Personal_projects/ai_jira_assistant/jira_plugin/static/hello-world/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.containsSerialisedBlobs = exports.containsBlobs = exports.deserialiseBlobsInPayload = exports.serialiseBlobsInPayload = void 0;\nvar blobParser_1 = require(\"../utils/blobParser\");\nvar isPlainObject = function isPlainObject(value) {\n  if (typeof value !== 'object' || value === null) return false;\n  if (Object.prototype.toString.call(value) !== '[object Object]') return false;\n  var proto = Object.getPrototypeOf(value);\n  if (proto === null) return true;\n  var Ctor = Object.prototype.hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor === 'function' && Ctor instanceof Ctor && Function.prototype.call(Ctor) === Function.prototype.call(value);\n};\nvar blobToBase64WithMetadata = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(blob) {\n    var base64Data;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return (0, blobParser_1.blobToBase64)(blob);\n        case 2:\n          base64Data = _context.sent;\n          return _context.abrupt(\"return\", {\n            data: base64Data,\n            type: blob.type\n          });\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function blobToBase64WithMetadata(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar base64WithMetadataToBlob = function base64WithMetadataToBlob(metadata) {\n  return (0, blobParser_1.base64ToBlob)(metadata.data, metadata.type);\n};\nvar serialiseBlobsInPayload = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(payload) {\n    var blobData, entries;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          if (!(payload instanceof Blob)) {\n            _context3.next = 5;\n            break;\n          }\n          _context3.next = 3;\n          return blobToBase64WithMetadata(payload);\n        case 3:\n          blobData = _context3.sent;\n          return _context3.abrupt(\"return\", _objectSpread(_objectSpread({}, blobData), {}, {\n            __isBlobData: true\n          }));\n        case 5:\n          if (!Array.isArray(payload)) {\n            _context3.next = 7;\n            break;\n          }\n          return _context3.abrupt(\"return\", Promise.all(payload.map(function (item) {\n            return (0, exports.serialiseBlobsInPayload)(item);\n          })));\n        case 7:\n          if (!(payload && isPlainObject(payload))) {\n            _context3.next = 12;\n            break;\n          }\n          _context3.next = 10;\n          return Promise.all(Object.entries(payload).map(/*#__PURE__*/function () {\n            var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_ref3) {\n              var _ref5, key, value;\n              return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                while (1) switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _ref5 = _slicedToArray(_ref3, 2), key = _ref5[0], value = _ref5[1];\n                    _context2.t0 = key;\n                    _context2.next = 4;\n                    return (0, exports.serialiseBlobsInPayload)(value);\n                  case 4:\n                    _context2.t1 = _context2.sent;\n                    return _context2.abrupt(\"return\", [_context2.t0, _context2.t1]);\n                  case 6:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }, _callee2);\n            }));\n            return function (_x3) {\n              return _ref4.apply(this, arguments);\n            };\n          }()));\n        case 10:\n          entries = _context3.sent;\n          return _context3.abrupt(\"return\", Object.fromEntries(entries));\n        case 12:\n          return _context3.abrupt(\"return\", payload);\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return function serialiseBlobsInPayload(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexports.serialiseBlobsInPayload = serialiseBlobsInPayload;\nvar deserialiseBlobsInPayload = function deserialiseBlobsInPayload(payload) {\n  if (payload && isPlainObject(payload) && '__isBlobData' in payload) {\n    var typedData = payload;\n    return base64WithMetadataToBlob({\n      data: typedData.data,\n      type: typedData.type\n    });\n  }\n  if (Array.isArray(payload)) {\n    return payload.map(function (item) {\n      return (0, exports.deserialiseBlobsInPayload)(item);\n    });\n  }\n  if (payload && isPlainObject(payload)) {\n    var result = {};\n    for (var _i = 0, _Object$entries = Object.entries(payload); _i < _Object$entries.length; _i++) {\n      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        key = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n      result[key] = (0, exports.deserialiseBlobsInPayload)(value);\n    }\n    return result;\n  }\n  return payload;\n};\nexports.deserialiseBlobsInPayload = deserialiseBlobsInPayload;\nvar containsBlobs = function containsBlobs(payload) {\n  if (payload instanceof Blob) {\n    return true;\n  }\n  if (Array.isArray(payload)) {\n    return payload.some(function (item) {\n      return (0, exports.containsBlobs)(item);\n    });\n  }\n  if (payload && isPlainObject(payload)) {\n    return Object.values(payload).some(function (value) {\n      return (0, exports.containsBlobs)(value);\n    });\n  }\n  return false;\n};\nexports.containsBlobs = containsBlobs;\nvar containsSerialisedBlobs = function containsSerialisedBlobs(payload) {\n  if (payload && isPlainObject(payload) && '__isBlobData' in payload) {\n    return true;\n  }\n  if (Array.isArray(payload)) {\n    return payload.some(function (item) {\n      return (0, exports.containsSerialisedBlobs)(item);\n    });\n  }\n  if (payload && isPlainObject(payload)) {\n    return Object.values(payload).some(function (value) {\n      return (0, exports.containsSerialisedBlobs)(value);\n    });\n  }\n  return false;\n};\nexports.containsSerialisedBlobs = containsSerialisedBlobs;","map":{"version":3,"names":["_slicedToArray","require","default","_objectSpread","_regeneratorRuntime","_asyncToGenerator","Object","defineProperty","exports","value","containsSerialisedBlobs","containsBlobs","deserialiseBlobsInPayload","serialiseBlobsInPayload","blobParser_1","isPlainObject","prototype","toString","call","proto","getPrototypeOf","Ctor","hasOwnProperty","constructor","Function","blobToBase64WithMetadata","_ref","mark","_callee","blob","base64Data","wrap","_callee$","_context","prev","next","blobToBase64","sent","abrupt","data","type","stop","_x","apply","arguments","base64WithMetadataToBlob","metadata","base64ToBlob","_ref2","_callee3","payload","blobData","entries","_callee3$","_context3","Blob","__isBlobData","Array","isArray","Promise","all","map","item","_ref4","_callee2","_ref3","_ref5","key","_callee2$","_context2","t0","t1","_x3","fromEntries","_x2","typedData","result","_i","_Object$entries","length","_Object$entries$_i","some","values"],"sources":["G:/Personal_projects/ai_jira_assistant/jira_plugin/static/hello-world/node_modules/@forge/bridge/out/events/serialiseBlob.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.containsSerialisedBlobs = exports.containsBlobs = exports.deserialiseBlobsInPayload = exports.serialiseBlobsInPayload = void 0;\nconst blobParser_1 = require(\"../utils/blobParser\");\nconst isPlainObject = (value) => {\n    if (typeof value !== 'object' || value === null)\n        return false;\n    if (Object.prototype.toString.call(value) !== '[object Object]')\n        return false;\n    const proto = Object.getPrototypeOf(value);\n    if (proto === null)\n        return true;\n    const Ctor = Object.prototype.hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n    return (typeof Ctor === 'function' &&\n        Ctor instanceof Ctor &&\n        Function.prototype.call(Ctor) === Function.prototype.call(value));\n};\nconst blobToBase64WithMetadata = async (blob) => {\n    const base64Data = await (0, blobParser_1.blobToBase64)(blob);\n    return {\n        data: base64Data,\n        type: blob.type\n    };\n};\nconst base64WithMetadataToBlob = (metadata) => {\n    return (0, blobParser_1.base64ToBlob)(metadata.data, metadata.type);\n};\nconst serialiseBlobsInPayload = async (payload) => {\n    if (payload instanceof Blob) {\n        const blobData = await blobToBase64WithMetadata(payload);\n        return {\n            ...blobData,\n            __isBlobData: true\n        };\n    }\n    if (Array.isArray(payload)) {\n        return Promise.all(payload.map((item) => (0, exports.serialiseBlobsInPayload)(item)));\n    }\n    if (payload && isPlainObject(payload)) {\n        const entries = await Promise.all(Object.entries(payload).map(async ([key, value]) => [key, await (0, exports.serialiseBlobsInPayload)(value)]));\n        return Object.fromEntries(entries);\n    }\n    return payload;\n};\nexports.serialiseBlobsInPayload = serialiseBlobsInPayload;\nconst deserialiseBlobsInPayload = (payload) => {\n    if (payload && isPlainObject(payload) && '__isBlobData' in payload) {\n        const typedData = payload;\n        return base64WithMetadataToBlob({\n            data: typedData.data,\n            type: typedData.type\n        });\n    }\n    if (Array.isArray(payload)) {\n        return payload.map((item) => (0, exports.deserialiseBlobsInPayload)(item));\n    }\n    if (payload && isPlainObject(payload)) {\n        const result = {};\n        for (const [key, value] of Object.entries(payload)) {\n            result[key] = (0, exports.deserialiseBlobsInPayload)(value);\n        }\n        return result;\n    }\n    return payload;\n};\nexports.deserialiseBlobsInPayload = deserialiseBlobsInPayload;\nconst containsBlobs = (payload) => {\n    if (payload instanceof Blob) {\n        return true;\n    }\n    if (Array.isArray(payload)) {\n        return payload.some((item) => (0, exports.containsBlobs)(item));\n    }\n    if (payload && isPlainObject(payload)) {\n        return Object.values(payload).some((value) => (0, exports.containsBlobs)(value));\n    }\n    return false;\n};\nexports.containsBlobs = containsBlobs;\nconst containsSerialisedBlobs = (payload) => {\n    if (payload && isPlainObject(payload) && '__isBlobData' in payload) {\n        return true;\n    }\n    if (Array.isArray(payload)) {\n        return payload.some((item) => (0, exports.containsSerialisedBlobs)(item));\n    }\n    if (payload && isPlainObject(payload)) {\n        return Object.values(payload).some((value) => (0, exports.containsSerialisedBlobs)(value));\n    }\n    return false;\n};\nexports.containsSerialisedBlobs = containsSerialisedBlobs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}