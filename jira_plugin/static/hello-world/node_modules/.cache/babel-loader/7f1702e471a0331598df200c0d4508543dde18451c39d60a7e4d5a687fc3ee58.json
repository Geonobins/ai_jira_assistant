{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"G:/Personal_projects/ai_jira_assistant/jira_plugin/static/hello-world/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"G:/Personal_projects/ai_jira_assistant/jira_plugin/static/hello-world/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.events = void 0;\nvar bridge_1 = require(\"../bridge\");\nvar serialiseBlob_1 = require(\"./serialiseBlob\");\nvar callBridge = (0, bridge_1.getCallBridge)();\nvar emit = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(event, payload) {\n    var newPayload;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          newPayload = payload;\n          if (!(0, serialiseBlob_1.containsBlobs)(payload)) {\n            _context.next = 5;\n            break;\n          }\n          _context.next = 4;\n          return (0, serialiseBlob_1.serialiseBlobsInPayload)(payload);\n        case 4:\n          newPayload = _context.sent;\n        case 5:\n          return _context.abrupt(\"return\", callBridge('emit', {\n            event: event,\n            payload: newPayload\n          }));\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function emit(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar on = function on(event, callback) {\n  var wrappedCallback = function wrappedCallback(payload) {\n    var newPayload = payload;\n    if ((0, serialiseBlob_1.containsSerialisedBlobs)(payload)) {\n      newPayload = (0, serialiseBlob_1.deserialiseBlobsInPayload)(payload);\n    }\n    return callback(newPayload);\n  };\n  return callBridge('on', {\n    event: event,\n    callback: wrappedCallback\n  });\n};\nexports.events = {\n  emit: emit,\n  on: on\n};","map":{"version":3,"names":["_regeneratorRuntime","require","default","_asyncToGenerator","Object","defineProperty","exports","value","events","bridge_1","serialiseBlob_1","callBridge","getCallBridge","emit","_ref","mark","_callee","event","payload","newPayload","wrap","_callee$","_context","prev","next","containsBlobs","serialiseBlobsInPayload","sent","abrupt","stop","_x","_x2","apply","arguments","on","callback","wrappedCallback","containsSerialisedBlobs","deserialiseBlobsInPayload"],"sources":["G:/Personal_projects/ai_jira_assistant/jira_plugin/static/hello-world/node_modules/@forge/bridge/out/events/events.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.events = void 0;\nconst bridge_1 = require(\"../bridge\");\nconst serialiseBlob_1 = require(\"./serialiseBlob\");\nconst callBridge = (0, bridge_1.getCallBridge)();\nconst emit = async (event, payload) => {\n    let newPayload = payload;\n    if ((0, serialiseBlob_1.containsBlobs)(payload)) {\n        newPayload = await (0, serialiseBlob_1.serialiseBlobsInPayload)(payload);\n    }\n    return callBridge('emit', { event, payload: newPayload });\n};\nconst on = (event, callback) => {\n    const wrappedCallback = (payload) => {\n        let newPayload = payload;\n        if ((0, serialiseBlob_1.containsSerialisedBlobs)(payload)) {\n            newPayload = (0, serialiseBlob_1.deserialiseBlobsInPayload)(payload);\n        }\n        return callback(newPayload);\n    };\n    return callBridge('on', { event, callback: wrappedCallback });\n};\nexports.events = {\n    emit,\n    on\n};\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,mBAAA,GAAAC,OAAA,oIAAAC,OAAA;AAAA,IAAAC,iBAAA,GAAAF,OAAA,kIAAAC,OAAA;AACbE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,MAAM,GAAG,KAAK,CAAC;AACvB,IAAMC,QAAQ,GAAGR,OAAO,CAAC,WAAW,CAAC;AACrC,IAAMS,eAAe,GAAGT,OAAO,CAAC,iBAAiB,CAAC;AAClD,IAAMU,UAAU,GAAG,CAAC,CAAC,EAAEF,QAAQ,CAACG,aAAa,EAAE,CAAC;AAChD,IAAMC,IAAI;EAAA,IAAAC,IAAA,GAAAX,iBAAA,cAAAH,mBAAA,GAAAe,IAAA,CAAG,SAAAC,QAAOC,KAAK,EAAEC,OAAO;IAAA,IAAAC,UAAA;IAAA,OAAAnB,mBAAA,GAAAoB,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAC1BL,UAAU,GAAGD,OAAO;UAAA,KACpB,CAAC,CAAC,EAAER,eAAe,CAACe,aAAa,EAAEP,OAAO,CAAC;YAAAI,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OACxB,CAAC,CAAC,EAAEd,eAAe,CAACgB,uBAAuB,EAAER,OAAO,CAAC;QAAA;UAAxEC,UAAU,GAAAG,QAAA,CAAAK,IAAA;QAAA;UAAA,OAAAL,QAAA,CAAAM,MAAA,WAEPjB,UAAU,CAAC,MAAM,EAAE;YAAEM,KAAK,EAALA,KAAK;YAAEC,OAAO,EAAEC;UAAW,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAG,QAAA,CAAAO,IAAA;MAAA;IAAA,GAAAb,OAAA;EAAA,CAC5D;EAAA,gBANKH,IAAIA,CAAAiB,EAAA,EAAAC,GAAA;IAAA,OAAAjB,IAAA,CAAAkB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAMT;AACD,IAAMC,EAAE,GAAG,SAALA,EAAEA,CAAIjB,KAAK,EAAEkB,QAAQ,EAAK;EAC5B,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAIlB,OAAO,EAAK;IACjC,IAAIC,UAAU,GAAGD,OAAO;IACxB,IAAI,CAAC,CAAC,EAAER,eAAe,CAAC2B,uBAAuB,EAAEnB,OAAO,CAAC,EAAE;MACvDC,UAAU,GAAG,CAAC,CAAC,EAAET,eAAe,CAAC4B,yBAAyB,EAAEpB,OAAO,CAAC;IACxE;IACA,OAAOiB,QAAQ,CAAChB,UAAU,CAAC;EAC/B,CAAC;EACD,OAAOR,UAAU,CAAC,IAAI,EAAE;IAAEM,KAAK,EAALA,KAAK;IAAEkB,QAAQ,EAAEC;EAAgB,CAAC,CAAC;AACjE,CAAC;AACD9B,OAAO,CAACE,MAAM,GAAG;EACbK,IAAI,EAAJA,IAAI;EACJqB,EAAE,EAAFA;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}