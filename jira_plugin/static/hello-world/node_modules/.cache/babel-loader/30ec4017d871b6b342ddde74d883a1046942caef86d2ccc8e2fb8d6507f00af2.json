{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.invoke = void 0;\nvar bridge_1 = require(\"../bridge\");\nvar errors_1 = require(\"../errors\");\nvar utils_1 = require(\"../utils\");\nvar callBridge = (0, bridge_1.getCallBridge)();\nvar validatePayload = function validatePayload(payload) {\n  if (!payload) return;\n  if (Object.values(payload).some(function (val) {\n    return typeof val === 'function';\n  })) {\n    throw new errors_1.BridgeAPIError('Passing functions as part of the payload is not supported!');\n  }\n};\nvar _invoke = function _invoke(functionKey, payload) {\n  if (typeof functionKey !== 'string') {\n    throw new errors_1.BridgeAPIError('functionKey must be a string!');\n  }\n  validatePayload(payload);\n  return callBridge('invoke', {\n    functionKey: functionKey,\n    payload: payload\n  });\n};\nexports.invoke = (0, utils_1.withRateLimiter)(_invoke, 500, 1000 * 25, 'Resolver calls are rate limited at 500req/25s');","map":{"version":3,"names":["Object","defineProperty","exports","value","invoke","bridge_1","require","errors_1","utils_1","callBridge","getCallBridge","validatePayload","payload","values","some","val","BridgeAPIError","_invoke","functionKey","withRateLimiter"],"sources":["G:/Personal_projects/ai_jira_assistant/jira_plugin/static/hello-world/node_modules/@forge/bridge/out/invoke/invoke.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.invoke = void 0;\nconst bridge_1 = require(\"../bridge\");\nconst errors_1 = require(\"../errors\");\nconst utils_1 = require(\"../utils\");\nconst callBridge = (0, bridge_1.getCallBridge)();\nconst validatePayload = (payload) => {\n    if (!payload)\n        return;\n    if (Object.values(payload).some((val) => typeof val === 'function')) {\n        throw new errors_1.BridgeAPIError('Passing functions as part of the payload is not supported!');\n    }\n};\nconst _invoke = (functionKey, payload) => {\n    if (typeof functionKey !== 'string') {\n        throw new errors_1.BridgeAPIError('functionKey must be a string!');\n    }\n    validatePayload(payload);\n    return callBridge('invoke', { functionKey, payload });\n};\nexports.invoke = (0, utils_1.withRateLimiter)(_invoke, 500, 1000 * 25, 'Resolver calls are rate limited at 500req/25s');\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,MAAM,GAAG,KAAK,CAAC;AACvB,IAAMC,QAAQ,GAAGC,OAAO,CAAC,WAAW,CAAC;AACrC,IAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAW,CAAC;AACrC,IAAME,OAAO,GAAGF,OAAO,CAAC,UAAU,CAAC;AACnC,IAAMG,UAAU,GAAG,CAAC,CAAC,EAAEJ,QAAQ,CAACK,aAAa,EAAE,CAAC;AAChD,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,OAAO,EAAK;EACjC,IAAI,CAACA,OAAO,EACR;EACJ,IAAIZ,MAAM,CAACa,MAAM,CAACD,OAAO,CAAC,CAACE,IAAI,CAAC,UAACC,GAAG;IAAA,OAAK,OAAOA,GAAG,KAAK,UAAU;EAAA,EAAC,EAAE;IACjE,MAAM,IAAIR,QAAQ,CAACS,cAAc,CAAC,4DAA4D,CAAC;EACnG;AACJ,CAAC;AACD,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAIC,WAAW,EAAEN,OAAO,EAAK;EACtC,IAAI,OAAOM,WAAW,KAAK,QAAQ,EAAE;IACjC,MAAM,IAAIX,QAAQ,CAACS,cAAc,CAAC,+BAA+B,CAAC;EACtE;EACAL,eAAe,CAACC,OAAO,CAAC;EACxB,OAAOH,UAAU,CAAC,QAAQ,EAAE;IAAES,WAAW,EAAXA,WAAW;IAAEN,OAAO,EAAPA;EAAQ,CAAC,CAAC;AACzD,CAAC;AACDV,OAAO,CAACE,MAAM,GAAG,CAAC,CAAC,EAAEI,OAAO,CAACW,eAAe,EAAEF,OAAO,EAAE,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,+CAA+C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}